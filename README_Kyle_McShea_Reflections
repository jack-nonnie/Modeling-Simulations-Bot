Design
1.	What was most helpful about thinking about design methods of your project?
Our use of brainstorming and developing clear cut goals initially was helpful in designing our project. We also used a sense of priority ranking in our goals. We started big picture by configuring a bot to create web scraping accessible to users, and then we also discussed having the bot monitor user activity as well as banning, muting, and kicking users based off specific criteria. We also discussed very bare bones by saying we needed to configure the bot to connect to groupme through local tunnel. 
2.	What was most difficult? What would you do differently?
The most difficult section was getting a clear-cut goal for the bot. This was a necessary pain, but after talking several different ideas, we came to agreements. My issue was that our original goals were to “simple” so we settled on adding web scraping as a feature. If I was to do this different, I would have organized goals by creating a ranking of goals. One would be for barebones what we HAVE to do. Then optional additions, and then advanced additions. This ranking would have helped make a cohesive design plan originally.
3.	What design methods might you want to try again in the future on another project?
The story board was very helpful because it gave a visual to the goals of our project. It also allowed us to organize each member’s ideas and witness how they work. Although the visuals were very simple with [command]  [action] they were still just enough to understand the idea. I also enjoyed this because I don’t specifically like use case diagrams, they are very concrete and don’t allow for any creativity. Very task oriented and no flare to it. 
Implementation
1.	What was most helpful about implementing, testing, and integration in your bot project?
Continuous testing throughout the entire project was a strategy that helped us in our creation of the bot. In the beginning we moved to far without testing and would run into several errors. After realizing to test at smaller intervals we were able to stop errors earlier on and work faster.
2.	What was most difficult? What would you do differently?
The most difficult section was getting the bot to configure with connecting to the GroupMe. This was a necessary pain, but after trying several different methods, it worked. I would not change anything about the way this went, we had to connect the bot for any of this to work. Unfortunately, resources that can aid this to achieve this task were outdated so there was a lot of pure learning and configuring on our own which I would not take away from this project.
3.	What implementation, testing, and integration methods might you want to try again in the future on another project?
Testing our project execution very often was helpful to us when overlooking our bot. We would test very often because several unknown issues would come up when carrying on to far into the project. Therefore, testing in small intervals is something I would carry on into another project.
Process
1.	What was most helpful about implementing kanban and code review in your project?
Implementing these two concepts allowed to better understand and track the achievements and goals of other members. We were able to see how others looked to achieve the goals we want and work more cohesively.
2.	What was most difficult? What would you do differently?
The most difficult part was not collaborating on the project until we noticed milestones were close to a week out. If we made our bot a continuous development we would have put out a better processing of the project. COVID-19 made it difficult as well to collaborate as we could only do it through zoom and Austin is located in California currently.
3.	What software processes or practices might you want to try again in the future on another project?
Code reviews will be a process I will definitely bring into my work this summer. I appreciated how it allowed you to understand the works of others and how they are thinking. Almost like you can delve into their mind for a little bit. This tool was best at mitigating miscommunications.
Overall
Overall, this class provided with a large amount of design, implementation, and process strategies to make this project compile and work accordingly to our original requirements. Being able to see storyboarding, Travis-CI, testing interval lessons, Kanban, code review, and several other concepts at work helped to further understand the principles of software engineering. The main process I will use in further work is the code review and the storyboarding. The code review was great for breaking down problem solving goals and insights of other team members. The storyboarding was also great for breaking down objectives visually. I will also carry the small testing intervals into further projects. It helps with having the project compile correctly and achieve the goals one wants. When I was developing the web scraper, I truly utilized the concept of continuous testing through in and throughout. This was helpful as I was dealing with a new API puppeteer and I was also writing async functions in JavaScript which I’ve never done/learned about. I was a little annoyed with not being able to connect a script to the GroupMe bot but I learned a lot in the process of trying to achieve that. I was glad to be part of a team in which we worked together to achieve a bot in GroupMe that was customized to our liking. The functions were pretty complex, and I was glad to see this compile as a team.
