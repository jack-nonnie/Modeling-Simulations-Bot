DESIGN
1. What was most helpful about thinking about design methods of your of your project?
The most helpful thing about thinking about design methods of our project is that by coming up with various design models prior to creating our project gave us clear cut goals and strategies to implement when we got to devlopment. It also made sure that we were all on the same page about what we wanted to accomplish with the project and it made it much easier to communicate. The design model that was the most helpful was the storyboard because it showed a clear picture of what we wanted to get done.
2. What was the most difficult? What would you do differently?
The most difficult part about the design was getting everyone on the same page eventhough we are in different towns. Ideally we would all be together in person to come up with the design so that we could bounce ideas off of each other more easily. I believe that if we did the design part of the project in the same room it would have saved us a significant amount of time and effort along with eliminating some miscomunications.
3. What design methods might you want to try again in the future on another project?
The design method that was my favorite that I definitely will utilize for future projects is the storyboard. I really enjoyed using the storyboard because I believe that it is a very effective way of laying out all of your ideas in a way that is really easy to understand. I also think it helps me identify useful user stories that I want to make sure my project accomplishes.
IMPLEMENTATION
1. What was most helpful about implementing, testing, and integration in your bot project?
The thing that was most helpful about implementation was the fact that we were utilizing continuous testing. When we were developing we would continuously test each function in order to make sure that it is working effectively. By testing each function continuously throughout the project it helped enhance our understanding of what how each function worked and how it relates to other aspects of our project.
2. What was most difficult? What would you do differently?
The most difficult part of the process was configuring the bot. Configuring the bot is extremely dificult because I personally have very limited experience with setting up a server and groupme has an extremely limited amount of resources available for setting up a connection with their API and setting up a server. Another problem was that Groupme's developer page has a tutorial for setting up a bot and it involves using a tunneling service called localtunnel. The problem is that the tutorial is old and localtunnel is no longer opperational. If I could redo it I would have not wasted time trying to get localtunnel to work and I would have immediately switched over to ngrok.
3. What implementation, testing, and integration methods might you want to try again in the future on another project?
Continuos testing and continuous integration were two elements that we utilized for our project that I thought were extremely helpful. I would definitely utilize both continuous testing and continuous integration for future projects. The reason for this is because I believe that both continuous integration and continuous testing are extremely helpful in making sure the project continuouly progresses in an efficient manner.
PROCESS
1. What was most helpful about implementing kanban and code review in your project?
Code review and Kanban were both very helpful in our project. They were both really useful tools. The most useful part of using these tools is that it helped us understand what our partners intended with their code. It also made it easier to spot flaws in code that one of us uploaded. 
2. What was most difficult? What would you do differently?
If I could do it again I would start working on the project earlier on in the process. We had a time stress on us and it would have been greatly reduced if we spread the work out better. In doing it again I would set up deliberate sprints and stick to each sprint thoroughly.
3. What software processes or practices might you want to try again in the future on another project?
The software processes that I thought were the most helpful that I definitely want to utilize again in the future are code reviews and Travis-CI. I liked code reviews because I think they are really helpful at determining points of interest that I could work on to improve the overall efficiency of the project and because I think they are really helpful at determining bugs and miscomunications when dealing with partners. I really liked Travis-CI becasue I believe that it is really useful for making sure that the project does not get overly complex and is provides a lot of useful metrics.
OVERALL
Overall I believe that this class provided us with a plethera of different strategies that helped make our project a success. Out of all of the strategies the strategies that I personally think are the most effective and that I will be utilizing again in the future are story boarding, continuous testing, and Travis-CI. I will definetely utilize storyboarding in the future because I believe that it is a great way to visualize user stories and function points. By having a visual I think that it helps keep everyone in the group on task and working for the same direction. I will utilize continuous testing for future projects because I believe that it is a great way to further the groups understanding of what is going on in the project. Also I believe that continuous testing helps streamline the project and makes the entire project more efficient. Furthermore I would utilize Travis-CI for future projects. Personally I believe that Travis-CI is really really cool and it is very informative. I enjoy very much learning how complex each of my functions are and I think it is really useful to know so that I can refactor efficiently.
